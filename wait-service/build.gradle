plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.2'
    id 'io.spring.dependency-management' version '1.1.0'
    id "org.asciidoctor.jvm.convert" version "3.3.2" // restDocs
}

group = 'liar'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    asciidoctorExt // restdocs
}

repositories {
    mavenCentral()
    maven { url 'https://artifactory-oss.prod.netflix.net/artifactory/maven-oss-candidates' }
}

ext {
    snippetsDir = file('build/generated-snippets') // restdocs
//    asciidocVersion = "3.0.2.RELEASE" // restdocs
    set('springCloudVersion', "2022.0.1")
}

dependencies {
//    implementation 'org.springframework:spring-tx'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

    //common
    //jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    //json
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

    //mockito
    testImplementation 'org.mockito:mockito-inline'
    testImplementation 'org.mockito:mockito-junit-jupiter:4.11.0'

    //xss
    implementation 'com.navercorp.lucy:lucy-xss-servlet:2.0.0'
    implementation 'com.navercorp.lucy:lucy-xss:1.6.3'

    //StringEscapeUtils
    implementation 'org.apache.commons:commons-text:1.8'

    //validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    //config-service
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'

    //AMQP
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.cloud:spring-cloud-starter-bus-amqp'

    // restdocs
    asciidoctorExt "org.springframework.restdocs:spring-restdocs-asciidoctor"
    testImplementation "org.springframework.restdocs:spring-restdocs-mockmvc"


    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

// <-- restdocs start-->

test {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

asciidoctor {
    inputs.dir snippetsDir
    configurations 'asciidoctorExt'
    dependsOn test
}

bootJar {
    dependsOn asciidoctor
    from ("${asciidoctor.outputDir}/html5") {
        into 'static/docs'
    }
}

bootJar {
    dependsOn asciidoctor

    copy {
        from asciidoctor.outputDir
        into "src/main/resources/static/docs"
    }
}

jar {
    enabled = false
}

tasks.withType(JavaCompile) {
    options.release = 17
}

// <-- restdocs end-->
